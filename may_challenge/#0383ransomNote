
// In java
class Solution {
    public boolean canConstruct(String ransomNote, String magazine) {
        int[] magazineCount = new int[26];
        for (int i = 0; i < magazine.length(); i++) {
            magazineCount[magazine.charAt(i) - 'a']++;
        }
        for (int i = 0; i < ransomNote.length(); i++) {
            if (--magazineCount[ransomNote.charAt(i) - 'a'] < 0) {
                return false;
            }
        }
        return true;
    }
}
============================================================================
//in c
bool canConstruct(char * ransomNote, char * magazine)
{
	int *ranSet = calloc(26, sizeof(int));
	int *magSet = calloc(26, sizeof(int));

	bool ret = true;
	int idx = 0;
	while (ransomNote[idx] != '\0')
	{
		ranSet[(ransomNote[idx] - 'a')] += 1;
		idx++;
	}
	idx = 0;
	while (magazine[idx] != '\0')
	{
		magSet[(magazine[idx] - 'a')] += 1;
		idx++;
	}

	for (int i = 0; i < 26; i++)
	{
		if (magSet[i] < ranSet[i])
		{
			ret = false;
			break;
		}
	}

	free(ranSet);
	free(magSet);

	return ret;
}

===================================================================
//in c++
class Solution {
public:
    bool canConstruct(string ransomNote, string magazine) {
        int magazineCount[26];
        memset(magazineCount, 0, sizeof(magazineCount)); 
        for (int i = 0; i < magazine.length(); i++) {
            magazineCount[magazine[i]- 'a']++;
        }
        for (int i = 0; i < ransomNote.length(); i++) {
            if (--magazineCount[ransomNote[i] - 'a'] < 0) {
                return false;
            }
        }
        return true;
    }
};
